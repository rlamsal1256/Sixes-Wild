package player.model;

import player.controllers.PlayerAppReference;
import player.controllers.RemoveSquareController;
import common.controllers.BoardSelectionController;
import common.model.AbstractContainer;
import common.model.AbstractMove;
import common.model.AbstractSquare;
import common.model.Board;
import common.model.Tile;

public class RemoveMove extends AbstractMove {

	Board board;
	AbstractSquare square;
	Tile tile;
	
	public RemoveMove(Board board, AbstractSquare square) {
		this.board = board;
		this.square = square;
	}

	@Override
	public boolean doMove() {
		if(board==null)
			return false;
		if(square instanceof AbstractContainer){
			Tile t=((AbstractContainer) square).peek();
			if(t==null){
				return false;
			}
			if(t.getVal()==6){
				return false;
			}
			tile=((AbstractContainer) square).remove();
			board.update();
			return true;
		}
		return false;
	}
	
	public static String type(){
		return "Remove";
	}

	public static BoardSelectionController controller() {
		// TODO Auto-generated method stub
		return new RemoveSquareController(PlayerAppReference.get().getGameView().getBoardView());
	}

}
